
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id    String @id @default(uuid())
  name  String
  email String @unique
  role  String @default("USER")

  @@map("users")
}

model BetaSubscribers {
  id    String @id @default(uuid())
  email String @unique

  @@map("beta_subscribers")
}

model Tour {
  id               Int         @id @default(autoincrement())
  uniqueId         Int         @unique
  title            String
  description      String?
  location         String
  country          String
  durationInDays   Int        @default(0)
  itinerary        String?
  safariType       String?
  accommodationType String?
  siteURL          String?
  included         String?
  excluded         String?
  rating           Float?      @default(0)
  reviews          String?
  dateCreated      DateTime    @default(now())
  dateModified     DateTime?     @updatedAt
  archived         Boolean     @default(false)
  images           TourImage[]
  prices           TourPrice[]

  @@map("tours")
}

model TourImage {
  id           Int      @id @default(autoincrement())
  image_urls   String
  dateCreated  DateTime @default(now())
  dateModified DateTime? @updatedAt
  tour         Tour     @relation(fields: [tourId], references: [uniqueId], onDelete: Cascade)
  tourId       Int

  @@map("tour_images")
} 

model TourPrice {
  id             Int      @id @default(autoincrement())
  numOfPeople    Int      @default(0)
  currency       String
  pricePerPerson Float    @default(0)
  seasonName     String
  seasonPeriod   String
  dateCreated    DateTime @default(now())
  dateModified   DateTime? @updatedAt
  tour           Tour     @relation(fields: [tourId], references: [uniqueId], onDelete: Cascade)
  tourId         Int      @default(0)

  @@map("tour_prices")
}
